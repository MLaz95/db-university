1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT students.*
FROM students
INNER JOIN degrees ON students.degree_id = degrees.id
WHERE degrees.name = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
SELECT degrees.*
FROM degrees
INNER JOIN departments ON degrees.department_id = departments.id
WHERE departments.name = 'Dipartimento di Neuroscienze' AND degrees.level = 'magistrale'

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT courses.*, course_teacher.teacher_id
FROM courses
INNER JOIN course_teacher ON courses.id = course_teacher.course_id
WHERE course_teacher.teacher_id = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
SELECT students.id, students.name, students.surname, degrees.name AS 'Degree', departments.name AS 'Department'
FROM `students`
INNER JOIN degrees ON students.degree_id = degrees.id
INNER JOIN departments ON degrees.department_id = departments.id
ORDER BY students.name, students.surname;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT degrees.name AS 'Degree', courses.name AS 'Course', teachers.name, teachers.surname
FROM courses
INNER JOIN degrees ON courses.degree_id = degrees.id
INNER JOIN course_teacher ON courses.id = course_teacher.course_id
INNER JOIN teachers ON course_teacher.teacher_id = teachers.id;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
SELECT teachers.*
FROM teachers
INNER JOIN course_teacher ON teachers.id = course_teacher.teacher_id
INNER JOIN courses ON course_teacher.course_id = courses.id
INNER JOIN degrees ON courses.degree_id = degrees.id
INNER JOIN departments ON degrees.department_id = departments.id
WHERE departments.name = 'Dipartimento di Matematica'
GROUP BY teachers.id, teachers.name, teachers.surname, teachers.phone, teachers.email, teachers.office_address, teachers.office_number
ORDER BY `teachers`.`name` ASC;

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.
SELECT students.name, students.surname, courses.name AS 'Course', COUNT(exams.course_id) AS 'Attempts', MAX(exam_student.vote) AS 'Best Result'
FROM students
INNER JOIN exam_student ON students.id = exam_student.student_id
INNER JOIN exams ON exam_student.exam_id = exams.id
INNER JOIN courses ON exams.course_id = courses.id
WHERE exam_student.vote >= 18
GROUP BY exams.course_id, students.name, students.surname, courses.name;